"use strict";
/*!
 * devextreme-angular
 * Version: 18.1.3
 * Build date: Wed May 16 2018
 *
 * Copyright (c) 2012 - 2018 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-angular
 */
Object.defineProperty(exports, "__esModule", { value: true });
var core_1 = require("@angular/core");
var common_1 = require("@angular/common");
var http_request_1 = require("./http-request");
var domAdapter = require("devextreme/core/dom_adapter");
var readyCallbacks = require("devextreme/core/utils/ready_callbacks");
var events = ['mousemove', 'mouseover', 'mouseout', 'scroll'];
var DxIntegrationModule = (function () {
    function DxIntegrationModule(document, ngZone, _ngHttp) {
        domAdapter.inject({
            _document: document,
            listen: function () {
                var _this = this;
                var args = [];
                for (var _i = 0; _i < arguments.length; _i++) {
                    args[_i] = arguments[_i];
                }
                if (events.indexOf(args[1]) === -1) {
                    return ngZone.run(function () {
                        return _this.callBase.apply(_this, args);
                    });
                }
                return ngZone.runOutsideAngular(function () {
                    return _this.callBase.apply(_this, args);
                });
            },
            isElementNode: function (element) {
                return element && element.nodeType === 1;
            },
            isTextNode: function (element) {
                return element && element.nodeType === 3;
            },
            isDocument: function (element) {
                return element && element.nodeType === 9;
            }
        });
        ngZone.run(function () { return readyCallbacks.fire(); });
    }
    DxIntegrationModule.decorators = [
        { type: core_1.NgModule, args: [{
                    providers: [http_request_1.NgHttp]
                },] },
    ];
    /** @nocollapse */
    DxIntegrationModule.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: core_1.Inject, args: [common_1.DOCUMENT,] },] },
        { type: core_1.NgZone, },
        { type: http_request_1.NgHttp, },
    ]; };
    return DxIntegrationModule;
}());
exports.DxIntegrationModule = DxIntegrationModule;
//# sourceMappingURL=integration.js.map